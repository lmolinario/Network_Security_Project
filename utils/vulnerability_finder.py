import subprocess
import time

#networks authorized to be tested
WPANET2TEST="DC:39:6F:FD:5D:EB" # "FritzBox"
WEPNET2TEST="E8:DE:27:68:3C:E9"


# I connect to networks and scan their vulnerabilities
def vuln_find (wifilist):
    full_ip = []
    vulnerability = []
    for i in range(len(wifilist[0])):

        ip = []

        try:
            if wifilist[4][i] == WEPNET2TEST or wifilist[4][i] ==  WPANET2TEST:
                if i == 0:
                    if ((str(wifilist[2][i])) == "wpa2" or (str(wifilist[2][i])) == "wpa" or (
                    str(wifilist[2][i])) == "wep"):
                        print("\nNow that we have obtained the password to the network", (wifilist[0][i]),
                              "let's try to connect....\n")
                        subprocess.call(["sudo", "nmcli", "device", "wifi", "connect", (wifilist[0][i]), "password",
                                         str(wifilist[6][i])])
                        to_split = subprocess.run(["hostname", "-I"], capture_output=True)
                        exit = str(to_split.stdout)
                        point = "."
                        li_fr = exit.split(point)
                        q = list(li_fr[0])
                        g = q[2:]
                        x = (li_fr[3])
                        space = " "
                        y = x.split(space)
                        null = ""
                        elem = null.join(g)
                        ip.append(elem)
                        ip.append(li_fr[1])
                        ip.append(li_fr[2])
                        ip.append(y[0])
                        ip = point.join(ip)
                        full_ip.append(ip)
                        # start scanning nmap
                        ipscan = elem + "." + li_fr[1] + "." + li_fr[2] + ".0/24"
                        print("\nNetwork connection", (wifilist[0][i]),
                              "occurred successfully.\nThe IP number assigned by the Access Point is", full_ip[i])
                        print("\nStarting vulnerability scanning using \"Nmap Vulscan\"....\nPlease wait...\n")
                        # vulscan scan...very long in case of many connected users
                        #                   vulner=subprocess.run(["sudo", "nmap","-v", "--script","vuln",ipscan], capture_output= True)
                        # sscan with normal nmap:
                        vulner = subprocess.run(["sudo", "nmap", "-p", "22", ipscan], capture_output=True)
                        vulnerability.append(vulner)

                        # Any connections on network cards are terminated
                        try:
                            subprocess.call(["sudo", "nmcli", "device", "disconnect", "wlan0"])
                        except:
                            print(
                                "The Wlan0 network card was not used in the process, so it does not need to be deactivated")
                        #                     try:
                        #                         subprocess.call(["sudo", "nmcli", "device", "disconnect", "wlan1"])
                        #                     except:
                        #                         print("The network card wlan1 was not used in the process, so it does not need to be deactivated")
                        time.sleep(5)

                    else:
                        subprocess.call(["sudo", "nmcli", "device", "wifi", "connect", (wifilist[0][i])])
                        to_split = subprocess.run(["hostname", "-I"], capture_output=True)
                        exit = str(to_split.stdout)
                        point = "."
                        li_fr = exit.split(point)
                        q = list(li_fr[0])
                        g = q[2:]
                        x = (li_fr[3])
                        space = " "
                        y = x.split(space)
                        null = ""
                        elem = null.join(g)
                        ip.append(elem)
                        ip.append(li_fr[1])
                        ip.append(li_fr[2])
                        ip.append(y[0])
                        ip = point.join(ip)
                        full_ip.append(ip)
                        # iniziamo la scansione nmap
                        ipscan = elem + "." + li_fr[1] + "." + li_fr[2] + ".0/24"
                        print("\nNetwork connection", (wifilist[0][i]),
                              "occurred successfully.\nThe IP number assigned by the Access Point is", full_ip[i])
                        print("\nStarting vulnerability scanning using \"Nmap Vulscan\"....\nPlease wait...\n")
                        # vulscan scan...very long in case of many connected users
                        #                   vulner=subprocess.run(["sudo", "nmap","-v", "--script","vuln",ipscan], capture_output= True)
                        # sscan with normal nmap:
                        vulner = subprocess.run(["sudo", "nmap", "-p", "22", ipscan], capture_output=True)
                        vulnerability.append(vulner)

                        # Any connections on network cards are terminated
                        try:
                            subprocess.call(["sudo", "nmcli", "device", "disconnect", "wlan0"])
                        except:
                            print(
                                "The Wlan0 network card was not used in the process, so it does not need to be deactivated")

                        time.sleep(5)
                else:
                    if (((wifilist[0][i])) != ((wifilist[0][i - 1])) and ((wifilist[3][i])) != ((wifilist[3][i - 1]))):
                        if ((str(wifilist[2][i])) == "wpa2" or (str(wifilist[2][i])) == "wpa" or (
                        str(wifilist[2][i])) == "wep"):
                            print("\nNow that we have obtained the password to the network", (wifilist[0][i]),
                                  "let's try to connect....\n")
                            subprocess.call(["sudo", "nmcli", "device", "wifi", "connect", (wifilist[0][i]), "password",
                                             str(wifilist[6][i])])
                            to_split = subprocess.run(["hostname", "-I"], capture_output=True)
                            exit = str(to_split.stdout)
                            point = "."
                            li_fr = exit.split(point)
                            q = list(li_fr[0])
                            g = q[2:]
                            x = (li_fr[3])
                            space = " "
                            y = x.split(space)
                            null = ""
                            elem = null.join(g)
                            ip.append(elem)
                            ip.append(li_fr[1])
                            ip.append(li_fr[2])
                            ip.append(y[0])
                            ip = point.join(ip)
                            full_ip.append(ip)
                            # Start of scan with normal nmap:
                            ipscan = elem + "." + li_fr[1] + "." + li_fr[2] + ".0/24"
                            print("\nNetwork connection", (wifilist[0][i]),
                                  "occurred successfully.\nThe IP number assigned by the Access Point is", full_ip[i])
                            print("\nStarting vulnerability scanning using \"Nmap Vulscan\"....\nPlease wait...\n")
                            # vulscan scan...very long in case of many connected users
                            #               vulner=subprocess.run(["sudo", "nmap","-v", "--script","vuln",ipscan], capture_output= True)
                            # sscan with normal nmap:
                            vulner = subprocess.run(["sudo", "nmap", "-p", "22", ipscan], capture_output=True)
                            vulnerability.append(vulner)

                            # Any connections on network cards are terminated
                            try:
                                subprocess.call(["sudo", "nmcli", "device", "disconnect", "wlan0"])
                            except:
                                print(
                                    "The Wlan0 network card was not used in the process, so it does not need to be deactivated")

                            time.sleep(5)

                        else:
                            subprocess.call(["sudo", "nmcli", "device", "wifi", "connect", (wifilist[0][i])])
                            to_split = subprocess.run(["hostname", "-I"], capture_output=True)
                            exit = str(to_split.stdout)
                            point = "."
                            li_fr = exit.split(point)
                            q = list(li_fr[0])
                            g = q[2:]
                            x = (li_fr[3])
                            space = " "
                            y = x.split(space)
                            null = ""
                            elem = null.join(g)
                            ip.append(elem)
                            ip.append(li_fr[1])
                            ip.append(li_fr[2])
                            ip.append(y[0])
                            ip = point.join(ip)
                            full_ip.append(ip)
                            # Start of scan with normal nmap:
                            ipscan = elem + "." + li_fr[1] + "." + li_fr[2] + ".0/24"
                            print("\nNetwork connection", (wifilist[0][i]),
                                  "occurred successfully.\nThe IP number assigned by the Access Point is", full_ip[i])
                            print("\nStarting vulnerability scanning using \"Nmap Vulscan\"....\nPlease wait...\n")
                            # vulscan scan...very long in case of many connected users
                            #               vulner=subprocess.run(["sudo", "nmap","-v", "--script","vuln",ipscan], capture_output= True)
                            # Scan with normal nmap:
                            vulner = subprocess.run(["sudo", "nmap", "-p", "22", ipscan], capture_output=True)
                            vulnerability.append(vulner)

                            # Any connections on network cards are terminated
                            try:
                                subprocess.call(["sudo", "nmcli", "device", "disconnect", "wlan0"])
                            except:
                                print(
                                    "The Wlan0 network card was not used in the process, so it does not need to be deactivated")
                            time.sleep(5)
                    else:
                        #                     print("Network",(wifilist [0][i-1])" has the same parameters as the previous one already scanned.\n")
                        pos = len(full_ip) - 1
                        full_ip.append(full_ip[pos])
                        vulnerability.append(vulnerability[pos])

            else:
                print (f"\nBE CAREFUL!!! Wifi network {wifilist[0][i]} not allowed for testing!!!!!!")


        except Exception as e:
            print(f"The Wi-Fi connection has been lost....\nError: {str(e)}")
            full_ip.append(None)
            vulnerability.append(None)

    wifilist.append(full_ip)
    wifilist.append(vulnerability)

    return (wifilist)
